apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../dependencies.gradle'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    androidExtensions {
        experimental = true
    }
    sourceSets {
        androidTest.java.srcDirs += "$rootDir/test-common/java"
        test.java.srcDirs += "$rootDir/test-common/java"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    // module dependencies
    implementation project(":entity")

    // network
    api "com.github.skydoves:sandwich:$versions.sandwichVersion"
    api "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"

    // unit test
    testImplementation "junit:junit:$versions.junitVersion"
    testImplementation "androidx.test:core:$versions.androidxTest"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"
    testImplementation "org.robolectric:robolectric:$versions.robolectricVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlinVersion"
}

apply from: '../spotless.gradle'
